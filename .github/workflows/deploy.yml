name: CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Dependencies
        run: |
          python -m venv python/venv
          source python/venv/bin/activate
          pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Run tests
        run: |
          source python/venv/bin/activate
          export PYTHONPATH=$(pwd)/python
          pytest python/tests/

  build-frontend:
    name: Build React UI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "23.x"

      - name: Install Dependencies
        working-directory: node
        run: npm ci

      - name: Build UI
        working-directory: node
        run: npm run build

  image-build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # required for OIDC
      contents: read 
    
    needs: 
      - test
      - build-frontend
        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubCicdRole
          aws-region: ${{ secrets.AWS_REGION }}
    
      - name: Set environment variables
        run: |
          echo "ECR_REGISTRY=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com" >> $GITHUB_ENV

      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build and tag Docker image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY_NAME }} .
          docker tag ${{ secrets.ECR_REPOSITORY_NAME }}:latest $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY_NAME }}:${{ github.sha }}
        
      - name: Push Docker image to ECR
        run: |          
          docker push $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY_NAME }}:${{ github.sha }}
